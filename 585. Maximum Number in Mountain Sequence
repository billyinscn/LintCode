Description

Given a mountain sequence of n integers which increase firstly and then decrease, find the mountain top.

Example
Example 1:

Input: nums = [1, 2, 4, 8, 6, 3] 
Output: 8
Example 2:

Input: nums = [10, 9, 8, 7], 
Output: 10
************************************************
二分法。
思路：OOXX， 找OX的peak，用eitherOO or XX作为条件来判断二分。

peak左边的特点是A[i] > A[i-1]， 右边的特点是A[i] > A[i+1]，我们可以用任意一个条件来判断。丢掉不符合条件的一半。
最后剩下start和end两个index， 高的那个是mountain top。
**************************************************

def mountainPeak (self, nums):
    if nums == None:
       return None
    start, end = 0, len(nums)
    while start + 1 < end:
      mid = (start + end ) // 2
      // use A[i] > A[i+1] as the determine creteria
      if nums [mid] > nums [mid+1]:
          end = mid
      else:
          start = mid
    return max [num[start], nums[end])



